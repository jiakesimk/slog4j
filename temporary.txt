<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>com.keyboard.agent.Agent</Main-Class>
                                        <Agent-Class>com.keyboard.agent.Agent</Agent-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


String name = className.trim().replaceAll("/", ".");
        if (ListenerMethodManager.get(name) != null) {
            try {
                // 从ClassPool获得CtClass对象
                final ClassPool pool = ClassPool.getDefault();
                final CtClass cbtCtClass = pool.get("future.Test");
                CtMethod method = cbtCtClass.getDeclaredMethod("test");
                method.insertBefore("com.sophon.logger.source.Logger.info(\"--开始打印\");");
                method.insertAfter("com.sophon.logger.source.Logger.info(\"--打印完成\");");
                // 返回字节码，并且detachCtClass对象
                byte[] byteCode = cbtCtClass.toBytecode();
                //detach的意思是将内存中曾经被javassist加载过的Date对象移除，如果下次有需要在内存中找不到会重新走javassist加载
                cbtCtClass.detach();
                return byteCode;
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }